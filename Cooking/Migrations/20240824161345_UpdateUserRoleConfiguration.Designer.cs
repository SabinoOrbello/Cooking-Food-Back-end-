// <auto-generated />
using System;
using Cooking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cooking.Migrations
{
    [DbContext(typeof(RecipeContext))]
    [Migration("20240824161345_UpdateUserRoleConfiguration")]
    partial class UpdateUserRoleConfiguration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cooking.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A0B2489CC35");

                    b.HasIndex(new[] { "Name" }, "UQ__Categori__737584F64CFD88A9")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Cooking.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IngredientId")
                        .HasName("PK__Ingredie__BEAEB25ADD282832");

                    b.HasIndex(new[] { "Name" }, "UQ__Ingredie__737584F6F4BAF523")
                        .IsUnique();

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("Cooking.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int?>("CookingTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RecipeId")
                        .HasName("PK__Recipes__FDD988B0A3E78AD4");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Cooking.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A91851D41");

                    b.HasIndex(new[] { "RoleName" }, "UQ_Roles_RoleName")
                        .IsUnique();

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61601D9C1AD8")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Cooking.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CC4D6D95F");

                    b.HasIndex(new[] { "Email" }, "UQ_Users_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ_Users_Username")
                        .IsUnique();

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E469AF1F3C")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105346371AC1D")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Favorite", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RecipeId")
                        .HasName("PK__Favorite__085554C73FCCFDFC");

                    b.HasIndex("RecipeId");

                    b.ToTable("Favorites", (string)null);
                });

            modelBuilder.Entity("RecipeCategory", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "CategoryId")
                        .HasName("PK__RecipeCa__5C491B10A86D3751");

                    b.HasIndex("CategoryId");

                    b.ToTable("RecipeCategories", (string)null);
                });

            modelBuilder.Entity("RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId")
                        .HasName("PK__RecipeIn__4633639518C98B02");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients", (string)null);
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId")
                        .HasName("PK__UserRole__AF2760AD41557D14");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Favorite", b =>
                {
                    b.HasOne("Cooking.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__Recip__4D94879B");

                    b.HasOne("Cooking.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__UserI__4CA06362");
                });

            modelBuilder.Entity("RecipeCategory", b =>
                {
                    b.HasOne("Cooking.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__RecipeCat__Categ__49C3F6B7");

                    b.HasOne("Cooking.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK__RecipeCat__Recip__48CFD27E");
                });

            modelBuilder.Entity("RecipeIngredient", b =>
                {
                    b.HasOne("Cooking.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK__RecipeIng__Ingre__4316F928");

                    b.HasOne("Cooking.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .IsRequired()
                        .HasConstraintName("FK__RecipeIng__Recip__4222D4EF");
                });

            modelBuilder.Entity("UserRole", b =>
                {
                    b.HasOne("Cooking.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__RoleI__5441852A");

                    b.HasOne("Cooking.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserRoles__UserI__534D60F1");
                });
#pragma warning restore 612, 618
        }
    }
}
